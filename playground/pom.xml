<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.janprach.sparktest</groupId>
		<artifactId>sparktest</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
	<artifactId>playground</artifactId>

	<properties>
		<main.class>com.janprach.sparktest.playground.SparkTestApp</main.class>

<!--		<avro.version>1.9.1</avro.version>-->
		<avro.version>1.8.2</avro.version>
<!--		<avro4s.version>3.0.4</avro4s.version>-->
		<avro4s.version>2.0.4</avro4s.version>
		<calcite.version>1.26.0</calcite.version>
		<classgraph.version>4.8.60</classgraph.version>
		<datasketches.version>1.1.0-incubating</datasketches.version>
		<deequ.version>0.666</deequ.version>
<!--		<deequ.version>1.0.2</deequ.version>-->
		<delta.version>0.5.0</delta.version>
		<frameless.version>0.8.0</frameless.version>
		<hdrhistogram.version>2.1.12</hdrhistogram.version>
		<hudi.version>0.5.0-incubating</hudi.version>
		<iceberg.version>0.7.0-incubating</iceberg.version>
		<partiql.version>0.1.2</partiql.version>
		<prestosql.version>328</prestosql.version>
		<tensorflow.version>1.15.0</tensorflow.version>
		<zetasql.version>2019.12.1</zetasql.version>
	</properties>

	<dependencies>
		<!-- sparktest -->
		<dependency>
			<groupId>com.janprach.sparktest</groupId>
			<artifactId>common</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.janprach.sparktest</groupId>
			<artifactId>macros</artifactId>
			<version>${project.version}</version>
		</dependency>

		<!-- jackson -->
		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-avro</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-protobuf</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-yaml</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-properties</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jsr310</artifactId>
		</dependency>

		<!-- spring -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>
		<!-- TODO: remove this please -->
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.8.5</version>
		</dependency>

		<dependency>
			<groupId>io.github.classgraph</groupId>
			<artifactId>classgraph</artifactId>
			<version>${classgraph.version}</version>
		</dependency>

		<!-- spark -->
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-sql_${scala.compat.version}</artifactId>
		</dependency>
<!--		<dependency>-->
<!--			<groupId>org.apache.spark</groupId>-->
<!--			<artifactId>spark-avro_${scala.compat.version}</artifactId>-->
<!--		</dependency>-->
<!--		<dependency>-->
<!--			<groupId>org.apache.spark</groupId>-->
<!--			<artifactId>spark-mllib_${scala.compat.version}</artifactId>-->
<!--		</dependency>-->
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-streaming_${scala.compat.version}</artifactId>
			<version>${spark.version}</version>
		</dependency>
<!--		<dependency>-->
<!--			<groupId>org.apache.spark</groupId>-->
<!--			<artifactId>spark-streaming-kafka-0-10_${scala.compat.version}</artifactId>-->
<!--			<version>${spark.version}</version>-->
<!--		</dependency>-->
<!--		<dependency>-->
<!--			<groupId>org.apache.spark</groupId>-->
<!--			<artifactId>spark-sql-kafka-0-10_${scala.compat.version}</artifactId>-->
<!--			<version>${spark.version}</version>-->
<!--		</dependency>-->
<!--		<dependency>-->
<!--			<groupId>org.apache.spark</groupId>-->
<!--			<artifactId>spark-graphx_${scala.compat.version}</artifactId>-->
<!--			<version>${spark.version}</version>-->
<!--		</dependency>-->

		<!-- delta and iceberg -->
		<dependency>
			<groupId>io.delta</groupId>
			<artifactId>delta-core_${scala.compat.version}</artifactId>
			<version>${delta.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.hudi</groupId>
			<artifactId>hudi-spark</artifactId>
			<version>${hudi.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.iceberg</groupId>
			<artifactId>iceberg-spark</artifactId>
			<version>${iceberg.version}</version>
		</dependency>

		<!-- datasketches -->
		<dependency>
			<groupId>org.apache.datasketches</groupId>
			<artifactId>datasketches-java</artifactId>
			<version>${datasketches.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hdrhistogram</groupId>
			<artifactId>HdrHistogram</artifactId>
			<version>${hdrhistogram.version}</version>
		</dependency>

		<!-- avro -->
		<dependency>
			<groupId>com.sksamuel.avro4s</groupId>
			<artifactId>avro4s-core_${scala.compat.version}</artifactId>
			<version>${avro4s.version}</version>
		</dependency>

		<!-- frameless -->
		<dependency>
			<groupId>org.typelevel</groupId>
			<artifactId>frameless-cats_${scala.compat.version}</artifactId>
			<version>${frameless.version}</version>
		</dependency>
		<dependency>
			<groupId>org.typelevel</groupId>
			<artifactId>frameless-dataset_${scala.compat.version}</artifactId>
			<version>${frameless.version}</version>
		</dependency>

		<!-- deequ - build locally with latest dependencies -->
		<dependency>
			<groupId>com.amazon.deequ</groupId>
			<artifactId>deequ</artifactId>
			<version>${deequ.version}</version>
		</dependency>

		<!-- tensorflow -->
		<dependency>
			<groupId>org.tensorflow</groupId>
			<artifactId>tensorflow</artifactId>
			<version>${tensorflow.version}</version>
		</dependency>

		<!-- presto -->
		<dependency>
			<groupId>io.prestosql</groupId>
			<artifactId>presto-main</artifactId>
			<version>${prestosql.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>slf4j-jdk14</artifactId>
					<groupId>org.slf4j</groupId>
				</exclusion>
			</exclusions>
		</dependency>
<!--		<dependency>-->
<!--			<groupId>io.prestosql</groupId>-->
<!--			<artifactId>presto-server</artifactId>-->
<!--			<version>${prestosql.version}</version>-->
<!--		</dependency>-->
		<dependency>
			<groupId>io.prestosql</groupId>
			<artifactId>presto-jdbc</artifactId>
			<version>${prestosql.version}</version>
		</dependency>
		<dependency>
			<groupId>io.prestosql</groupId>
			<artifactId>presto-parquet</artifactId>
			<version>${prestosql.version}</version>
		</dependency>
<!--		<dependency>-->
<!--			<groupId>io.prestosql</groupId>-->
<!--			<artifactId>presto-kafka</artifactId>-->
<!--			<version>${prestosql.version}</version>-->
<!--		</dependency>-->
		<dependency>
			<groupId>io.prestosql</groupId>
			<artifactId>presto-ml</artifactId>
			<version>${prestosql.version}</version>
		</dependency>

		<!-- partiql -->
		<dependency>
			<groupId>org.partiql</groupId>
			<artifactId>partiql-lang-kotlin</artifactId>
			<version>${partiql.version}</version>
		</dependency>

		<!-- zetasql -->
		<dependency>
			<groupId>com.google.zetasql</groupId>
			<artifactId>zetasql-client</artifactId>
			<version>${zetasql.version}</version>
		</dependency>
		<dependency>
			<groupId>com.google.zetasql</groupId>
			<artifactId>zetasql-jni-channel</artifactId>
			<version>${zetasql.version}</version>
		</dependency>

		<!-- calcite -->
		<dependency>
			<groupId>org.apache.calcite</groupId>
			<artifactId>calcite-core</artifactId>
			<version>${calcite.version}</version>
		</dependency>

		<!-- test -->
		<dependency>
			<groupId>com.janprach.sparktest</groupId>
			<artifactId>common</artifactId>
			<version>${project.version}</version>
			<type>test-jar</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.scalatest</groupId>
			<artifactId>scalatest_${scala.compat.version}</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.holdenkarau</groupId>
			<artifactId>spark-testing-base_${scala.compat.version}</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>MrPowers</groupId>
			<artifactId>spark-fast-tests</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.apache.avro</groupId>
				<artifactId>avro</artifactId>
				<version>${avro.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.avro</groupId>
				<artifactId>avro-mapred</artifactId>
				<classifier>hadoop2</classifier>
				<version>${avro.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.avro</groupId>
				<artifactId>avro-ipc</artifactId>
				<version>${avro.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>net.alchim31.maven</groupId>
				<artifactId>scala-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.scalatest</groupId>
				<artifactId>scalatest-maven-plugin</artifactId>
			</plugin>
<!--			<plugin>-->
<!--				<groupId>org.apache.maven.plugins</groupId>-->
<!--				<artifactId>maven-assembly-plugin</artifactId>-->
<!--			</plugin>-->
		</plugins>
	</build>
</project>
